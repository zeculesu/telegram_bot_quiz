import telebot
from telebot import types
import json
import emoji

bot = telebot.TeleBot('')
file_info = json.load(open('info.json', encoding='utf-8'))
questions = file_info['questions']
number_quiz = 0
answer_exict = False
start_chat = False
count = []


@bot.callback_query_handler(func=lambda call: True)
def callback_worker(call):
    global answer_exict, number_quiz, count
    if int(call.data.split(';')[1]) == number_quiz:
        correct_answer = file_info["answer"][str(number_quiz)][1]
        if correct_answer == int(call.data.split(';')[0]):
            answer_to_user = file_info["answer"][str(number_quiz)][0]
            bot.send_message(call.message.chat.id,
                             'A–±—Å–æ–ª—é—Ç–Ω–æ –≤–µ—Ä–Ω–æ! ' + answer_to_user)
            answer_exict = True
            if len(count) != number_quiz + 1:
                count.append(1)
            number_quiz += 1
        else:
            if len(count) != number_quiz + 1:
                count.append(0)
            bot.send_message(call.message.chat.id, '–ß—Ç–æ-—Ç–æ –Ω–µ —Ç–æ, –ø–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞')


def make_key(question, num):
    keyboard = types.InlineKeyboardMarkup()
    for i in range(4):
        key = types.InlineKeyboardButton(text=question[i], callback_data=f"{i + 1};{num}")
        keyboard.add(key)
    return keyboard


def quiz(message):
    global answer_exict
    global number_quiz, count, start_chat
    bot.send_message(message.from_user.id, "–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ! –ù–∞—á–Ω—ë–º —Å –ø—Ä–æ—Å—Ç–æ–≥–æ")
    for i in range(len(questions)):
        file_info["number_quiz"] = i
        keyboard = make_key(questions[list(questions.keys())[i]], i)
        bot.send_message(message.from_user.id, list(questions.keys())[i], reply_markup=keyboard)
        while not answer_exict:
            continue
        answer_exict = False
    while len(count) != 2:
        continue
    if len(count) == len(questions):
        bot.send_message(message.from_user.id, "–ú–æ–ª–æ–¥–µ—Ü, –ø—Ä–æ—à—ë–ª –∫–≤–∏–∑! " + emoji.emojize(":brain:"))
        bot.send_message(message.from_user.id, f'–í—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ {sum(count)}/2')
        number_quiz, count = 0, []
        start_chat = False


def generate_keyboard(*answer):
    keyboard = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
    for item in answer:
        button = types.KeyboardButton(item)
        keyboard.add(button)
    return keyboard


@bot.message_handler(content_types=['text'])
def get_text_messages(message):
    global number_quiz, count, start_chat
    if start_chat:
        bot.send_message(message.from_user.id, "–í—ã –Ω–µ –∑–∞–∫–æ–Ω—á–∏–ª–∏ –ø—Ä–æ—à–ª—ã–π –∫–≤–∏–∑")
        return
    elif message.text == "/start":
        bot.send_message(message.from_user.id, f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}! \n\n" 
                                               f"–≠—Ç–æ –∫–≤–∏–∑ –ø–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–º —Ñ–∞–∫—Ç–∞–º –∏–∑ —Å—Ñ–µ—Ä—ã IT üí°üí°üí° \n"
                                               f"–í—Å—ë —á—Ç–æ —Ç–µ–±–µ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –¥–ª—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è - —Å–º–∞—Ä—Ç—Ñ–æ–Ω üì±")
        keyboard = generate_keyboard('–î–∞', '–ù–µ—Ç')
        bot.send_message(message.from_user.id, "–ì–æ—Ç–æ–≤ –Ω–∞—á–∞—Ç—å?", reply_markup=keyboard)
    elif message.text == '–î–∞' and not start_chat:
        start_chat = True
        quiz(message)
    elif message.text == '–ù–µ—Ç':
        bot.send_photo(message.from_user.id, open('img/sad.jpg', 'rb'))
    elif message.text == "/help":
        bot.send_message(message.from_user.id, "–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å - –Ω–∞–ø–∏—à–∏: /start")
    else:
        bot.send_message(message.from_user.id, "–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é. –ù–∞–ø–∏—à–∏ /help.")


bot.polling(none_stop=True, interval=0)
